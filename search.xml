<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用批处理+VBS阻止电脑休眠</title>
    <url>/posts/antisleep-script/</url>
    <content><![CDATA[<blockquote>
<p>本文中的代码不一定能适应所有种类的Windows系统</p>
<p>请自行测试后再做出结论，你可以在评论区留言</p>
</blockquote>
<br>

<hr>
<h2 id="开端"><a href="#开端" class="headerlink" title="开端"></a>开端</h2><p>不知道你曾经是否有遇到和我类似的情况：</p>
<p>想要<strong>暂时禁止</strong>显示屏熄屏或休眠，但又不想去修改系统配置或是下载相关软件</p>
<p>毕竟只是<strong>暂时</strong>修改配置，不需要了还需要再改回来<br>下载其他软件又感觉没有必要，毕竟谁清楚某些软件是否真的干净呢</p>
<hr>
<h3 id="那么，难道就没有简单的脚本能够解决这个问题吗？"><a href="#那么，难道就没有简单的脚本能够解决这个问题吗？" class="headerlink" title="那么，难道就没有简单的脚本能够解决这个问题吗？"></a>那么，难道就没有简单的脚本能够解决这个问题吗？</h3><p>当然是有的，请看以下脚本！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; &amp; color 70 &amp; title AntiSleep &amp; mode con cols=30 lines=6 &amp; cls &amp; cscript.exe /nologo /e:vbscript &quot;%~f0&quot; &amp; exit</span><br><span class="line">Dim LoopNum</span><br><span class="line">Dim TimeNow</span><br><span class="line">LoopNum = 1</span><br><span class="line">set wsc = CreateObject(&quot;WScript.Shell&quot;)</span><br><span class="line">Do</span><br><span class="line">    TimeNow = Time</span><br><span class="line">    WScript.Echo &quot;  Send successfully_Loop:&quot; &amp; LoopNum</span><br><span class="line">    WScript.Echo &quot;  &quot; &amp; TimeNow</span><br><span class="line">    WScript.Sleep (60*1000)</span><br><span class="line">    wsc.SendKeys (&quot;&#123;SCROLLLOCK 2&#125;&quot;)</span><br><span class="line">    LoopNum = LoopNum + 1</span><br><span class="line">Loop</span><br></pre></td></tr></table></figure>
<blockquote>
<p>保存为.bat或.cmd文件</p>
</blockquote>
<p>如果你想了解更多，请看：</p>
<hr>
<h3 id="代码详解"><a href="#代码详解" class="headerlink" title="代码详解"></a>代码详解</h3><p>首先是第一行:<br><code>&#39; &amp; color 70 &amp; title AntiSleep &amp; mode con cols=30 lines=6 &amp; cls &amp; cscript.exe /nologo /e:vbscript &quot;%~f0&quot; &amp; exit</code></p>
<p>其中’(单引号)，在VBS中的作用是<strong>注释</strong>，这意味着在作为VBS脚本处理时，整个第一行都将作为注释<strong>直接跳过</strong><br>在批处理中作为命令直接执行单引号<strong>没有作用</strong>，但批处理并不会因为单引号无法执行就退出，而是会<strong>处理’后面</strong>使用&amp;符号连接的命令</p>
<p>&amp;在批处理中作为<strong>命令连接符</strong>，用于顺序执行多个命令，<strong>不管</strong>前一个命令是否成功执行<br>这意味着在作为批处理处理中，这条代码的单引号后面的命令都会继续执行</p>
<p><code>color 70</code> 是将命令行(cmd)窗口的颜色设置为<strong>白底黑字</strong><br><img src="https://cdn.illusionlie.com/img/postimg/antisleep-script/cmd-color.jpg" alt="cmd-color" loading="lazy"><br><code>title AntiSleep</code> 是将命令行窗口的标题改为”<strong>Antisleep</strong>“<br><code>mode con cols=30 lines=6</code> 是将命令行窗口大小设置为 <strong>30 列</strong>和 <strong>6 行</strong><br><code>cls</code> 用于清空命令行窗口中<strong>输出的内容</strong><br><code>cscript.exe /nologo /e:vbscript &quot;%~f0&quot;</code> 其中: </p>
<blockquote>
<p><code>cscript.exe</code> 是 Windows 中用于<strong>运行 VBScript 脚本</strong>的命令行工具</p>
<p><code>/nologo /e:vbscript</code> 是设置在执行时<strong>禁用显示</strong>CScript 的标志性标识与<strong>指定</strong>要执行的脚本<strong>类型</strong></p>
<p><code>&quot;%~f0&quot;</code> 表示当前批处理文件的完整路径名</p>
</blockquote>
<p>这意味着告诉<strong>cscript</strong>使用<strong>VBS类型</strong>执行<strong>自己</strong></p>
<p><code>exit</code> 代表<strong>退出</strong>当前执行批处理的CMD.EXE</p>
<p>第一行的作用就是在运行时<strong>设置</strong>命令行窗口的<strong>各项属性</strong><br>并将自己<strong>以VBS类型执行</strong>，最后，当执行的VBS(csript.exe)退出后也自行<strong>退出</strong></p>
<p>接下来是第二到三行:<br><code>Dim LoopNum</code><br><code>Dim TimeNow</code></p>
<p>从第二行开始的<strong>所有</strong>命令都将以<strong>VBS</strong>脚本而不是<strong>批处理</strong>脚本运行<br><code>Dim</code> 在VBS中用于声明变量<br>其实说白了，这两条代码就是创建了两个变量”<strong>LoopNum</strong>“与”<strong>TimeNow</strong>“</p>
<p>第四行:<br><code>LoopNum = 1</code></p>
<p>为提前定义好的变量”<strong>LoopNum</strong>“赋值，值为 <strong>1</strong></p>
<p>第五行:<br><code>set wsc = CreateObject(&quot;WScript.Shell&quot;)</code></p>
<p>其中:</p>
<blockquote>
<p><code>CreateObject(&quot;WScript.Shell&quot;)</code> 用于创建一个 <strong>WshShell</strong> 对象</p>
<p><strong>WshShell</strong> 是<strong>VBS</strong>中的一个内置对象，它提供了许多有用的功能，例如运行程序、操作注册表、创建快捷方式</p>
<p>而<code>set wsc = </code>则是代表设置之后使用<strong>wsc</strong>(字符串)来代表<strong>WshShell</strong></p>
</blockquote>
<p>第六行与第<strong>十三</strong>行:<br><code>Do</code><br><code>Loop</code></p>
<p>Do…Loop 是一种<strong>循环</strong>结构，用于重复执行一组语句，直到满足特定条件，其中: </p>
<blockquote>
<p><strong>Do While…Loop</strong>：在条件变为 <strong>False</strong> 之前重复执行语句</p>
<p><strong>Do Until…Loop</strong>：在条件变为 <strong>True</strong> 之前重复执行语句<br>而在这里，我们只使用了<code>Do</code>与<code>Loop</code>，并没有设置条件，这意味着其中的代码将<strong>一直循环</strong></p>
</blockquote>
<p>第七行:<br><code>TimeNow = Time</code></p>
<p>为提前定义好的变量”<strong>TimeNow</strong>“赋值，值为 <strong>Time</strong>函数<br><strong>Time</strong> 函数用于获取当前系统时间 </p>
<p>第八到九行:<br><code>WScript.Echo &quot;  Send successfully_Loop:&quot; &amp; LoopNum</code><br><code>WScript.Echo &quot;  &quot; &amp; TimeNow</code></p>
<p>类似批处理的<code>echo</code>，<code>WScript.Echo</code><strong>输出指定内容</strong><br>这两条代码输出<strong>LoopNum</strong>与当前<strong>时间</strong>(变量TimeNow)</p>
<p>第十行:<br><code>WScript.Sleep (60*1000)</code></p>
<p>让脚本<strong>暂停</strong> 60*1000 毫秒，也就是一分钟</p>
<p>第十一行:<br><code>wsc.SendKeys (&quot;&#123;SCROLLLOCK 2&#125;&quot;)</code></p>
<p>使用<strong>SendKeys</strong>发送两次<strong>滚动锁定键</strong><br>(Scroll Lock，在HOME上面，笔记本电脑可能没有，但<strong>也能</strong>发送)</p>
<p>第十二行:<br><code>LoopNum = LoopNum + 1</code></p>
<p>使变量<strong>LoopNum</strong>的值加 <strong>1</strong></p>
]]></content>
      <categories>
        <category>Script</category>
      </categories>
      <tags>
        <tag>Script</tag>
        <tag>Batch</tag>
        <tag>VBS</tag>
      </tags>
  </entry>
  <entry>
    <title>Cloudflare WARP IP 优选脚本(改)</title>
    <url>/posts/cf-warp-ip-preference/</url>
    <content><![CDATA[<p align="center">
  <a href="https://github.com/illusionlie/warp-ip-auto-preference-script">
    <img src="https://cdn.illusionlie.com/img/postimg/blog/cf-warp-ip-preference/wipap.webp" alt="WIPAP sample image" height="15%" loading="lazy">
  </a>
</p>

<p><strong><center>WARP IP Auto-preference</center></strong></p>
<span id="more"></span>

<hr>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>WARP IP Auto-preference (以下简称为<code>这个脚本</code>)是一个用于优选 <strong>Cloudflare WARP</strong> IPv4&#x2F;v6 IP的批处理脚本<br>此脚本中的<strong>部分</strong>代码和使用的<strong>程序</strong>来自 MisakaNo 的项目 <a href="https://gitlab.com/Misaka-blog/warp-script/-/tree/main/files/warp-yxip">[原项目链接]</a></p>
<h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>在 <a href="https://community.cloudflare.com/t/2024-6-6/668305">此</a> 之前的时候, 优选 WARP 的 IP 的作用主要是<strong>加快连接速度</strong>和<strong>优化节点质量</strong><br>但是从 <a href="https://community.cloudflare.com/t/2024-6-6/668305">此</a> 之后, WARP 如果不进行优选 IP 就<strong>无法进行连接</strong><br>具体错误码为 <code>CF_HAPPY_EYEBALLS_FAILURE</code>, 根据 <a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/troubleshooting/client-errors/#cf_happy_eyeballs_failure">官网的解释</a> 其实就是代表你<strong>连接不上</strong> WARP 的节点<br>这时候就需要进行优选了, 使用这个脚本可以帮助你 !</p>
<p>虽然使用原项目的脚本就已经可以进行正常优选, 但由于 WARP 的 <strong>v4</strong> 节点质量稀烂 (以及被GFW阻止), 可能连续优选好几次才能找到一个可用的节点, 况且可能部分新手不会进行设置<br>于是本脚本就为此而生了(同时也是我懒得手动优选好几次还得再筛选和设置), 本脚本将会自动进行前面所说的操作, 而无需多余手动操作<br>本脚本会筛选所有 丢包率低于 50% <strong>和</strong>延迟低于 400ms 的结果, 并且支持自动设置</p>
<p>由于脚本使用的是批处理进行编写, 你甚至可以直接右键编辑脚本中的设置</p>
<p><strong>声明</strong></p>
<blockquote>
<p>根据测试, 很多时候即使设置了优选的 IP 也无法连上</p>
<p>所以请多次尝试后再反馈 !</p>
</blockquote>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>请前往 Github 进行查看和下载<br>项目地址: <a href="https://github.com/illusionlie/warp-ip-auto-preference-script">[点击访问]</a><br>下载地址: <a href="https://github.com/illusionlie/warp-ip-auto-preference-script/releases">[点击访问]</a></p>
<p>请先查看项目地址中的说明后再使用 !</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><img src="https://gcore.jsdelivr.net/gh/illusionlie/jsDeliver/img/postimg/blog/cf-warp-ip-preference/ip.webp" alt="Example for WIPAP" loading="lazy"></p>
]]></content>
      <categories>
        <category>Script</category>
      </categories>
      <tags>
        <tag>Batch</tag>
      </tags>
  </entry>
  <entry>
    <title>使用批处理+PowerShell计算日期的相隔天数</title>
    <url>/posts/date-calculate-script/</url>
    <content><![CDATA[<blockquote>
<p>本文中的代码不一定能适应所有种类的Windows系统</p>
<p>请自行测试后再做出结论，你可以在评论区留言</p>
</blockquote>
<br>

<hr>
<h2 id="代码内容"><a href="#代码内容" class="headerlink" title="代码内容"></a>代码内容</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"># Usage: <span class="keyword">call</span> :datecounter &lt;<span class="built_in">Date</span> <span class="number">1</span>&gt; &lt;<span class="built_in">Date</span> <span class="number">2</span>&gt;</span><br><span class="line"># Example: <span class="keyword">call</span> :datecounter <span class="number">2021</span>-<span class="number">3</span>-<span class="number">5</span> <span class="number">2024</span>-<span class="number">8</span>-<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> :datecounter <span class="number">2020</span>-<span class="number">9</span>-<span class="number">1</span> <span class="number">2022</span>-<span class="number">11</span>-<span class="number">29</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%datecount%</span></span><br><span class="line"><span class="built_in">pause</span>&amp;<span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line">:datecounter</span><br><span class="line"><span class="keyword">for</span> /f &quot;delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;powershell -NoProfile -c &quot;[Math]::Abs(((Get-<span class="built_in">Date</span> &quot;%<span class="number">1</span>&quot;)-(Get-<span class="built_in">Date</span> &quot;%<span class="number">2</span>&quot;)).Days)&quot;&#x27;) <span class="keyword">do</span> (<span class="built_in">set</span> &quot;datecount=<span class="variable">%%a</span>&quot;)</span><br><span class="line"><span class="keyword">goto</span> :eof</span><br></pre></td></tr></table></figure>
<p><code>:datecounter</code>将被定义为计算函数<br><code>%datecount%</code>将被定义为计算结果</p>
<p>需要注意的是，这样计算的是<code>日期 1</code>到<code>日期 2</code><strong>之间</strong>有几天，不要搞混<br>例如，3月27日到3月30日<strong>之间</strong>有2天(28,29)，而不是3(28,29,30)天或4天(27,28,29,30)</p>
<p>如果你的电脑开机后第一次运行PowerShell命令，那么以上代码<strong>开机后第一次</strong>运算时会有一点延迟</p>
<h2 id="可能的Q-A"><a href="#可能的Q-A" class="headerlink" title="可能的Q&amp;A"></a>可能的Q&amp;A</h2><p><strong>Q: 为什么调用PowerShell而不是全部由批处理计算？</strong><br>A: 因为这样更简单，也方便调整和扩充</p>
<p><strong>Q: 如果第一个日期比第二个日期小不应该是负数吗？</strong><br>A: <code>[Math]::Abs</code>转成绝对值了</p>
<p><strong>Q: 09-01和9-1都可以吗</strong><br>A: 是的</p>
<p><strong>Q: <code>goto :eof</code>是做什么的</strong><br>A: 返回到<code>call :datecounter 2020-9-1 2022-11-29</code>后面</p>
<p><strong>Q: 如果我用不了<code>[Math]::Abs</code>怎么办</strong><br>A: 请评论留言你的具体系统版本，如果评论没有正常加载，请前往此博文的Github Issues页面</p>
]]></content>
      <categories>
        <category>Script</category>
      </categories>
      <tags>
        <tag>Batch</tag>
        <tag>PowerShell</tag>
      </tags>
  </entry>
  <entry>
    <title>在批处理中使用MD5验证密码</title>
    <url>/posts/md5verify-script/</url>
    <content><![CDATA[<blockquote>
<p>本文中的代码<strong>不一定能</strong>适应所有种类的Windows系统</p>
<p>请自行测试后再做出结论，你可以在评论区留言</p>
</blockquote>
<br>

<hr>
<p>以下代码可能因操作系统版本不同导致差异，并不保证完美运行</p>
<h2 id="代码内容"><a href="#代码内容" class="headerlink" title="代码内容"></a>代码内容</h2><p>这是一个简单的示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set &quot;password=c61ab46721af26e11112e5e272e93d46&quot;</span><br><span class="line">:PassCheck</span><br><span class="line">set /p &quot;typestr=输入密码进行校验： &quot;</span><br><span class="line">echo.%typestr% &gt; &quot;%temp%\pass.iL&quot;</span><br><span class="line">for /f &quot;delims=&quot; %%a in (</span><br><span class="line">	&#x27;certutil -hashfile &quot;%temp%\pass.iL&quot; MD5 ^| findstr /v &quot;[^^0-9a-z]&quot;&#x27;</span><br><span class="line">		) do (</span><br><span class="line">			set &quot;typemd5=%%a&quot;</span><br><span class="line">			del /f /q &quot;%temp%\pass.iL&quot; 2&gt;nul &gt;nul</span><br><span class="line">			)</span><br><span class="line">if &quot;%typemd5%&quot;==&quot;%password%&quot; (goto :next) else (call :PassCheckError)</span><br><span class="line">goto :PassCheck</span><br><span class="line"></span><br><span class="line">:PassCheckError</span><br><span class="line">cls</span><br><span class="line">echo 密码错误!</span><br><span class="line">goto :eof</span><br><span class="line"></span><br><span class="line">:next</span><br><span class="line">cls</span><br><span class="line">echo.继续你的其他命令</span><br><span class="line">pause&amp;exit</span><br></pre></td></tr></table></figure>


<blockquote>
<p>虽然批处理没有什么好的加密的办法，并且也很容易就被逆向，但如果你有需求的话可以试试</p>
<p>计算MD5值需要<code>certutil</code>工具，这个工具似乎从Win7开始就内置了，如果你不能使用，请留下一个评论</p>
</blockquote>
<h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>其中，先设定代表密码的变量<code>password</code>的值为<strong>12345</strong><em>在.iL文件中</em>的MD5值<br>然后进入循环<code>:PassCheck</code>，用户会被要求输入密码，输入的密码会被保存到变量<code>%typestr%</code>并存临时文件<code>%temp%\pass.iL</code>中<br>接着使用<code>certutil</code>计算临时文件<code>%temp%\pass.iL</code>的MD5值，过滤后将结果保存到变量<code>%typemd5%</code>中并删除临时文件<br>然后与预设密码的哈希值进行比较，如果两者匹配，跳转到<code>:next</code>并继续执行其他命令<br>如果不匹配，调用<code>:PassCheckError</code>显示“密码错误！”的消息并回到最开始</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><p>这是一个样例，使用mshta调用vbs内容生成弹窗并进行验证<br><del><strong>以下内容截自我的一个很早之前的脚本中的片段</strong></del><br><del><strong>因为是一个不完整的片段，所以你需要自行添加上下文，不过你可以参考我的弹窗设计</strong></del></p>
<br>

<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">:iLPassCheck</span><br><span class="line"><span class="built_in">set</span> typestr=</span><br><span class="line"><span class="keyword">for</span> /f &quot;delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;mshta vbscript:Execute(&quot;On Error Resume Next:Dim str,fso:str=InputBox(&quot;&quot;输入Battroll的启动密码&quot;&quot;,&quot;&quot;Battroll_PassCheck&quot;&quot;,&quot;&quot;&quot;&quot;):<span class="built_in">Set</span> fso=CreateObject(&quot;&quot;Scripting.FileSystemObject&quot;&quot;):fso.GetStandardStream(<span class="number">1</span>).Write str:<span class="built_in">Set</span> fso=Nothing:close&quot;^)&#x27;) <span class="keyword">do</span> (<span class="built_in">set</span> &quot;typestr=<span class="variable">%%a</span>&quot;)</span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">%typestr%</span>&quot;==&quot;&quot; <span class="keyword">exit</span></span><br><span class="line"><span class="built_in">echo</span>.<span class="variable">%typestr%</span> &gt; <span class="variable">%here%</span>\Pass.iL</span><br><span class="line"><span class="keyword">for</span> /f &quot;delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;certutil -hashfile &quot;<span class="variable">%here%</span>\Pass.iL&quot; MD5 ^| <span class="built_in">findstr</span> /v &quot;[^^<span class="number">0</span>-<span class="number">9</span>a-z]&quot;&#x27;) <span class="keyword">do</span> (<span class="built_in">set</span> &quot;typemd5=<span class="variable">%%a</span>&quot;)</span><br><span class="line"><span class="built_in">del</span> /f /q Pass.iL&gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%typemd5%</span>==<span class="variable">%iLPassword%</span> (<span class="keyword">goto</span> warn) <span class="keyword">else</span> (<span class="keyword">call</span> :iLPassCheckError)</span><br><span class="line"><span class="keyword">goto</span> iLPassCheck</span><br><span class="line">:iLPassCheckError</span><br><span class="line">mshta vbscript:msgbox(&quot;密码错误!&quot;,<span class="number">16</span>,&quot;Battroll_PassCheck&quot;)(window.close)</span><br><span class="line"><span class="keyword">goto</span> :eof</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="样图"><a href="#样图" class="headerlink" title="样图"></a>样图</h3><p><img src="https://cdn.illusionlie.com/img/postimg/md5verify-script/battroll-passcheck.webp" alt="battroll-passcheck" loading="lazy"></p>
<blockquote>
<p>界面</p>
</blockquote>
<p><img src="https://cdn.illusionlie.com/img/postimg/md5verify-script/battroll-passerror.webp" alt="battroll-passerror" loading="lazy"></p>
<blockquote>
<p>错误界面</p>
</blockquote>
]]></content>
      <categories>
        <category>Script</category>
      </categories>
      <tags>
        <tag>Batch</tag>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 油猴脚本 + IDM 实现多线程直链夸克网盘文件下载</title>
    <url>/posts/quark-boost/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>众所周知, 夸克网盘的恶心程度可以说是和百度网盘媲美的, 几乎同样的: 限速、(几乎强制的)客户端下载要求、广告、会员、审查、爆链等等<br>然而, 通过使用油猴脚本 + IDM 来实现多线程直链下载夸克网盘文件, 尽管夸克网盘仍然会对每个线程进行限速, 但在多线程的情况下, 速度会明显提升<br>甚至于无需使用客户端, 直接在浏览器中下载, 这对于一些不想给电脑安装一个臃肿的客户端的用户来说, 是一个非常方便的选择</p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>你需要:</p>
<ul>
<li>运行油猴脚本的浏览器扩展 (如 Tampermonkey)</li>
<li>IDM (确保拓展 IDM Integration Module 已启用)</li>
<li>夸克网盘账号</li>
</ul>
<p>有关于安装 Tampermonkey 等拓展的教程在网上有很多, 这里就不再赘述了, 可以自行搜索</p>
<p>首先, 点击下面的链接, 前往 Greasy Fork 安装油猴脚本:<br><a href="https://greasyfork.org/scripts/449291">[（改）网盘直链下载助手]</a></p>
<p>安装完成后, 前往 <a href="https://pan.quark.cn/list#/list/all">https://pan.quark.cn/list#/list/all</a> 并登录你的账号<br>此时, 你应该会看到上方”上传文件”按钮的左边会出现一个”点我点亮”的按钮<br><img src="https://cdn.illusionlie.com/img/postimg/blog/quark-boost/lightup.webp" alt="点我点亮" loading="lazy"></p>
<p>随后点击下方的”直接点亮”按钮, 等待右上角显示”注入成功”后, 刷新页面<br>此时”点我点亮”按钮会变成”下载助手”</p>
<p>现在, 选中你想要下载的文件, 点击”下载助手”按钮, 选择”API 下载”, 点击”直接下载(基于浏览器链接)”, 稍等一会, 便会调用 IDM 进行下载<br>如果 IDM 下载窗口并没有弹出, 检查以下几个原因:</p>
<ul>
<li>IDM 没有运行</li>
<li>浏览器没有启用拓展 IDM Integration Module</li>
<li>IDM 中并没有设置下载指定的文件类型 (很有可能)</li>
</ul>
<p>对于第三种情况, 打开 IDM, 点击”选项设置”, 在”文件类型”选项卡的”接管下载文件扩展名”中添加你要下载的文件类型, 如分卷压缩包”00*” (*代表通配符)</p>
]]></content>
      <categories>
        <category>Chore</category>
      </categories>
      <tags>
        <tag>NetDisk</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么我选择 Anydesk 而不是国内常用的 Todesk</title>
    <url>/posts/why-anydesk-not-todesk/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>现在这个时代, 远程桌面的使用也越来越多了, 用到的最多的用处便是远程协助了。然而, 国内常用的 Todesk 却给我了一个非常不好的体验, 让我意识到”国产软件还是国产软件”这句话的体现。<br>无论是 Anydesk 还是 Todesk, 都有给高级用户的付费服务, 但通常来说除非专业用户, 否则是不会用到付费服务的。所以这篇文章中只会考虑免费功能的使用体验。</p>
<h2 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h2><p>毫无疑问, 使用体验上 Anydesk 要比 Todesk 要好很多。<br>最主要的优势有三个:</p>
<ol>
<li><strong>开箱即用</strong><br>可以说在开箱即用上 Anydesk 是非常爽的, 这也是我认为它最大的优点, 先让我们假设一种情况: 你的一个电脑新手朋友需要你的远程协助。在这种情况下, 他没有远程桌面软件, 也不知道该如何选择。如果使用 Anydesk, 你只需要把 Anydesk 的二进制文件 (就一个文件) 发给他, 告诉他双击打开, 再让他把设备代码发过来, 你就可以直接控制他的电脑了。</li>
</ol>
<p>而 Todesk 呢, 你需要先让他下载并安装, 打开后还需要注册账号, 才能让你控制他的电脑。虽然听起来也还好, 但因为他是一个新手, 这对他来说可能就是一个小挑战了, 而且这也耗费了你们更多时间, 在隐私方面也是一个问题。</p>
<ol start="2">
<li><strong>轻便简洁</strong><br>虽然说如今的电脑普遍都有足够的存储空间, 但 Todesk 安装后直接占用了 140MB 的空间 (Geek Uninstaller 统计), 而 Anydesk 则只有 5MB 的单文件。虽然说 Anydesk 仍会向硬盘中写入一些其他数据, 但对于一个 <del><strong>赛博洁癖</strong></del> 普通用户来说, 这是可以接受的 (况且相比 Todesk 简直不要好了太多吧)。并且假设你不需要登录 Anydesk 账户的话, 你也可以把 Anydesk 拉去便携使用。</li>
</ol>
<p>包括 GUI 界面 Anydesk 也是非常简洁的, 没有多余的东西, 也没有多余的无用的功能。<br><img src="https://cdn.illusionlie.com/img/postimg/blog/why-anydesk-not-todesk/anydesk-gui.webp" alt="Anydesk GUI" loading="lazy"></p>
<p><img src="https://cdn.illusionlie.com/img/postimg/blog/why-anydesk-not-todesk/todesk-gui.webp" alt="Todesk GUI" loading="lazy"></p>
<ol start="3">
<li><strong>控制</strong><br>在控制对方屏幕时, 两者都是只有在对方不动鼠标键盘的情况下才能控制对方, 但 Anydesk 可以在对方仍在使用鼠标键盘的情况下提醒和标记。对方操作时, 仍可看到你的光标, 当你点击时, 会在对方的屏幕显示提醒。Todesk 则没有这个功能。</li>
</ol>
<h2 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h2><p>Anydesk 官网: <a href="https://anydesk.com/">https://anydesk.com</a><br>Todesk 官网: <a href="https://www.todesk.com/">https://www.todesk.com</a></p>
]]></content>
      <categories>
        <category>Software</category>
      </categories>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
</search>
