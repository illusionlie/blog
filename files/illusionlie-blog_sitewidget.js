/**
 *  @project IllusioinLie Site Widget JS
 *  @version 2.0.0
 *  @author IllusionLie
 */
var blogWidget = (function () {

let latestHeight;
let latestWidth;

function tsfWidgetGuard() {
    return;
    if (!(window.location.host.includes('theskyflame.pages.dev') || window.location.host.includes('theskyflame.org') || window.location.host.includes('localhost:4000'))) {
        tsfEndLoad();
    }
    if (new Date() < new Date('2025-01-21')) {
        tsfEndLoad();
    }
    if (((Math.abs(window.outerHeight - window.innerHeight) >= 250 ) || (210 <= Math.abs(window.outerWidth - window.innerWidth))) && !document.hidden) {
        tsfEndLoad();
    }

    if (((Math.abs(window.innerHeight - latestHeight) >= 250) || (210 <= Math.abs(window.innerWidth - latestWidth))) && !document.hidden) {
        tsfEndLoad();
    }
    latestHeight = window.innerHeight;
    latestWidth = window.innerWidth;
    setTimeout(tsfWidgetGuard, 300);
};

async function tsfEndLoad() {
    document.body.innerHTML = "";
    window.location.href = "about:blank";
    await new Promise(resolve => setTimeout(resolve, 1000));
    window.stop();
    debugger;
}

const bannerCookie = () => {
    if (`; ${document.cookie}`.split(`; notice=`).length === 2) {
        if ((`; ${document.cookie}`.split(`; notice=`).pop().split(';').shift()) == "true") {
            return;
        }
    }
    const cookieB = document.createElement('div');
    cookieB.className = 'cookie-consent';
    cookieB.innerHTML = `
    <div class="cookie-consent">
      üç™ Êú¨Á´ô‰ΩøÁî®CookieÊù•ÂàÜÊûêÊµÅÈáè‰ª•ÊîπÂñÑÁî®Êà∑‰ΩìÈ™å
      -
    <a href="https://developer.mozilla.org/docs/Web/HTTP/Cookies" target="_blank" style="color:#2DFFFF;">‰ªÄ‰πàÊòØCookie?</a>
    <button class="close-btn" onclick="blogWidget.closeBanner();"> √ó </button>
    </div>
    `;
    const styleB = document.createElement('style');
    styleB.innerHTML = `
        .cookie-consent {position: fixed;left: 0;bottom: 0;width: 100%;background-color: #003366;color: white;text-align: left;padding: 10px;z-index: 1000;}
        .close-btn {position: absolute;right: 20px;top: 50%;transform: translateY(-50%);border: none;background-color: transparent;color: white;font-size: 30px;cursor: pointer;}
        .close-btn:hover {color: #ccc;}
    `;
    document.head.appendChild(styleB);
    document.body.appendChild(cookieB);
};

function closeBanner() {
    document.querySelector('.cookie-consent').style.display='none';
    const d = new Date();
    d.setTime(d.getTime() + (14 * 24 * 60 * 60 * 1000));
    document.cookie = "notice=true;" + "expires=" + d.toUTCString() + ";path=/;SameSite=Lax;secure;";
}

function popupStyle() {
    const styleStatus = document.getElementById('popupStyle');
    if (styleStatus) {
        return;
    }
    const styleP = document.createElement('style');
    styleP.innerHTML = `
        .wrap {padding: 40px;text-align: center;}
        .tsfpop {background: #428bca;border: #357ebd solid 1px;border-radius: 3px;color: #fff;display: inline-block;font-size: 14px;padding: 8px 15px;text-decoration: none;text-align: center;min-width: 60px;position: relative;transition: color 0.1s ease;}
        .tsfpop:hover {background: #357ebd;}
        .tsfpop.tsfpop-big {font-size: 18px;padding: 15px 20px;min-width: 100px;}
        .tsfpop-close {color: #aaa;font-size: 30px;text-decoration: none;position: absolute;right: 15px;top: 0;cursor: pointer;}
        .tsfpop-close:hover {color: #919191;}
        .modalTSF {display: flex;justify-content: center;align-items: center;}
        .modalTSF:before {content: "";display: none;background: rgba(0, 0, 0, 0.6);position: fixed;top: 0;left: 0;right: 0;bottom: 0;z-index: 10;}
        .modalTSF.active:before {display: block;}
        .modalTSF .modalTSF-dialog {background: #fefefe;border: #333 solid 1px;border-radius: 5px;margin-left: -200px;position: fixed;left: 50%;top: -50%;z-index: 11;max-width: 500px;overflow-y: auto;transform: translate(0, -500%);transition: transform 0.3s ease-out;}
        .modalTSF.active .modalTSF-dialog {transform: translate(0, 0);top: 20%;}
        @media (max-width: 768px) {
            .modalTSF .modalTSF-dialog {margin-left: -150px;max-width: 300px;max-height: 68vh;}
            .modalTSF-body {overflow-y: scroll;}
        }
        .modalTSF-body {padding: 15px;}
        .modalTSF-header,
        .modalTSF-footer {padding: 10px 20px;}
        .modalTSF-header {border-bottom: #eee solid 1px;}
        .modalTSF-header h2 {font-size: 20px;}
        .modalTSF-footer {border-top: #eee solid 1px;text-align: right;}
    `;
    styleP.id = "popupStyle";
    document.head.appendChild(styleP);
}

function tsfCelebration() {
    if (document.getElementById('modalTSF-one') || document.getElementById('modalTSF-two')) {
        setTimeout(tsfCelebration, 1000);
    } else {
        const co_script = document.createElement('script');
        co_script.src = "https://gcore.jsdelivr.net/npm/js-confetti@latest/dist/js-confetti.browser.js";
        co_script.onload = async function() {
            try {
                const confetti = new JSConfetti();
                await confetti.addConfetti({
                    confettiColors: ['#FF0000', '#FF7F00', '#FFFF00', '#00FF00', '#0000FF', '#4B0082', '#8B00FF'],
                    confettiNumber: 333,
                    confettiRadius: 5,
                });
                popupC();
            } catch (error) {
                popupC();
            }
        };
        co_script.onerror = function() {
            popupC();
        };
    document.head.appendChild(co_script);
    };
    function popupC() {
        if (document.getElementById('modalTSF-one')) {
            setTimeout(popupC, 1000);
        } else {
            const createDate = new Date('2024-03-09');
            let runYears = Math.floor((new Date() - createDate) / (1000 * 60 * 60 * 24 * 365));
            popupStyle();
            const popupContainer = document.createElement('div');
            popupContainer.id = "popupC";
            popupContainer.innerHTML = `
                <div class="modalTSF" id="modalTSF-two" aria-hidden="true">
                    <div class="modalTSF-dialog">
                        <div class="modalTSF-header">
                            <h2 style="color:black">ËôöÂÉèË∞éË®ÄSite Widget</h2>
                            <a class="tsfpop-close" aria-hidden="false" onclick="blogWidget.closePopup();"> √ó </a>
                        </div>
                        <div class="modalTSF-body">
                            <h5 style="color:black; font-weight:bold;"><span style="color:blue; font-weight:bold;"> üéâ ‰ªäÂ§©ÊòØËØ•Á´ôÁÇπÁöÑÂª∫Á´ô${runYears}Âë®Âπ¥ ! ÊÑüË∞¢ÂêÑ‰ΩçÁöÑÈô™‰º¥ ! </span></h5>
                            <p style="color:black"><strong>ÂèØÂñúÂèØË¥∫, ÂèØÂñúÂèØË¥∫</strong></p>
                            <p style="color:black">2024/04/26 --> ${new Date().toLocaleDateString()}</p>
                        </div>
                        <div class="modalTSF-footer">
                            <a class="tsfpop" onclick="blogWidget.closePopup();">ÊàëÁü•ÈÅì‰∫Ü</a>
                        </div>
                    </div>
                </div>
            `;
            if (!document.getElementById('popupC')) {
                document.body.appendChild(popupContainer);
            }
            document.getElementById('modalTSF-two').classList.add('active');
        }
    }
}

function closePopup() {
    const popupC = document.getElementById('popupC');
    if (popupC) {
        popupC.classList.remove('active');
        popupC.parentNode.removeChild(popupC);
        return;
    }
    document.cookie = "popuptime=true; expires=" + new Date(Date.now() + 24 * 60 * 60 * 1000).toUTCString() + "; path=/; SameSite=Lax; secure;";
    const popupP = document.getElementById('modalTSF-one');
    popupP.classList.remove('active');
    popupP.parentNode.removeChild(popupP);
}

function checkCFcdn() {
    const request = new XMLHttpRequest();
    request.open('GET', '/cdn-cgi/trace', true);
    request.onload = function() {
      if (request.status >= 200 && request.status < 400) {
        const area = request.responseText.split("colo=")[1].split("\n")[0];
        const areas = ['{"s":"TNR","l":"Antananarivo, Madagascar üá≤üá¨"}','{"s":"CPT","l":"Cape Town, South Africa üáøüá¶"}','{"s":"CMN","l":"Casablanca, Morocco üá≤üá¶"}','{"s":"DAR","l":"Dar Es Salaam, Tanzania üáπüáø"}','{"s":"JIB","l":"Djibouti City, Djibouti üá©üáØ"}','{"s":"DUR","l":"Durban, South Africa üáøüá¶"}','{"s":"JNB","l":"Johannesburg, South Africa üáøüá¶"}','{"s":"KGL","l":"Kigali, Rwanda üá∑üáº"}','{"s":"LOS","l":"Lagos, Nigeria üá≥üá¨"}','{"s":"LAD","l":"Luanda, Angola üá¶üá¥"}','{"s":"MPM","l":"Maputo, MZ üá≤üáø"}','{"s":"MBA","l":"Mombasa, Kenya üá∞üá™"}','{"s":"MRU","l":"Port Louis, Mauritius üá≤üá∫"}','{"s":"RUN","l":"R√©union, France üá´üá∑"}','{"s":"BLR","l":"Bangalore, India üáÆüá≥"}','{"s":"BKK","l":"Bangkok, Thailand üáπüá≠"}','{"s":"BWN","l":"Bandar Seri Begawan, Brunei üáßüá≥"}','{"s":"CEB","l":"Cebu, Philippines üáµüá≠"}','{"s":"CTU","l":"ÊàêÈÉΩ,  ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"MAA","l":"Chennai, India üáÆüá≥"}','{"s":"CGP","l":"Chittagong, Bangladesh üáßüá©"}','{"s":"CKG","l":"ÈáçÂ∫Ü, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"CMB","l":"Colombo, Sri Lanka üá±üá∞"}','{"s":"DAC","l":"Dhaka, Bangladesh üáßüá©"}','{"s":"SZX","l":"‰∏úËéû, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"FUO","l":"‰ΩõÂ±±, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"FOC","l":"Á¶èÂ∑û, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"CAN","l":"ÂπøÂ∑û, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"HGH","l":"Êù≠Â∑û, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"HAN","l":"Hanoi, Vietnam üáªüá≥"}','{"s":"HNY","l":"Ë°°Èò≥, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"SGN","l":"Ho Chi Minh City, Vietnam üáªüá≥"}','{"s":"HKG","l":" È¶ôÊ∏Ø üá≠üá∞"}','{"s":"HYD","l":"Hyderabad, India üáÆüá≥"}','{"s":"ISB","l":"Islamabad, Pakistan üáµüá∞"}','{"s":"CGK","l":"Jakarta, Indonesia üáÆüá©"}','{"s":"TNA","l":"ÊµéÂçó, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"KHI","l":"Karachi, Pakistan üáµüá∞"}','{"s":"KTM","l":"Kathmandu, Nepal üá≥üáµ"}','{"s":"CCU","l":"Kolkata, India üáÆüá≥"}','{"s":"KUL","l":"Kuala Lumpur, Malaysia üá≤üáæ"}','{"s":"LHE","l":"Lahore, Pakistan üáµüá∞"}','{"s":"NAY","l":"ÂªäÂùä, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"LYA","l":"Ê¥õÈò≥, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"MFM","l":" Êæ≥Èó® üá≤üá¥"}','{"s":"MLE","l":"Mal√©, Maldives üá≤üáª"}','{"s":"MNL","l":"Manila, Philippines üáµüá≠"}','{"s":"BOM","l":"Mumbai, India üáÆüá≥"}','{"s":"NAG","l":"Nagpur, India üáÆüá≥"}','{"s":"NNG","l":"ÂçóÂÆÅ, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"DEL","l":"New Delhi, India üáÆüá≥"}','{"s":"KIX","l":"Osaka, Japan üáØüáµ"}','{"s":"PNH","l":"Phnom Penh, Cambodia üá∞üá≠"}','{"s":"TAO","l":"ÈùíÂ≤õ, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"ICN","l":"Seoul, South Korea üá∞üá∑"}','{"s":"SHA","l":"‰∏äÊµ∑, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"SHE","l":"Ê≤àÈò≥, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"SJW","l":"Áü≥ÂÆ∂Â∫Ñ, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"SIN","l":"Singapore, Singapore üá∏üá¨"}','{"s":"SZV","l":"ËãèÂ∑û, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"TPE","l":"Âè∞Âåó, Âè∞Êπæ üáπüáº"}','{"s":"PBH","l":"Thimphu, Bhutan üáßüáπ"}','{"s":"TSN","l":"Â§©Ê¥•, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"NRT","l":"Tokyo, Japan üáØüáµ"}','{"s":"ULN","l":"Ulaanbaatar, Mongolia üá≤üá≥"}','{"s":"VTE","l":"Vientiane, Laos üá±üá¶"}','{"s":"WUH","l":"Ê≠¶Ê±â, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"WUX","l":"Êó†Èî°, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"XIY","l":"Ë•øÂÆâ, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"EVN","l":"Yerevan, Armenia üá¶üá≤"}','{"s":"CGO","l":"ÈÉëÂ∑û, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"CSX","l":"Ê†™Ê¥≤, ‰∏≠ÂõΩÂ§ßÈôÜ üá®üá≥"}','{"s":"AMS","l":"Amsterdam, Netherlands üá≥üá±"}','{"s":"ATH","l":"Athens, Greece üá¨üá∑"}','{"s":"BCN","l":"Barcelona, Spain üá™üá∏"}','{"s":"BEG","l":"Belgrade, Serbia üá∑üá∏"}','{"s":"TXL","l":"Berlin, Germany üá©üá™"}','{"s":"BRU","l":"Brussels, Belgium üáßüá™"}','{"s":"OTP","l":"Bucharest, Romania üá∑üá¥"}','{"s":"BUD","l":"Budapest, Hungary üá≠üá∫"}','{"s":"KIV","l":"Chi»ôinƒÉu, Moldova üá≤üá©"}','{"s":"CPH","l":"Copenhagen, Denmark üá©üá∞"}','{"s":"ORK","l":"Cork, Ireland üáÆüá™"}','{"s":"DUB","l":"Dublin, Ireland üáÆüá™"}','{"s":"DUS","l":"D√ºsseldorf, Germany üá©üá™"}','{"s":"EDI","l":"Edinburgh, United Kingdom üá¨üáß"}','{"s":"FRA","l":"Frankfurt, Germany üá©üá™"}','{"s":"GVA","l":"Geneva, Switzerland üá®üá≠"}','{"s":"GOT","l":"Gothenburg, Sweden üá∏üá™"}','{"s":"HAM","l":"Hamburg, Germany üá©üá™"}','{"s":"HEL","l":"Helsinki, Finland üá´üáÆ"}','{"s":"IST","l":"Istanbul, Turkey üáπüá∑"}','{"s":"KBP","l":"Kyiv, Ukraine üá∫üá¶"}','{"s":"LIS","l":"Lisbon, Portugal üáµüáπ"}','{"s":"LHR","l":"London, United Kingdom üá¨üáß"}','{"s":"LUX","l":"Luxembourg City, Luxembourg üá±üá∫"}','{"s":"MAD","l":"Madrid, Spain üá™üá∏"}','{"s":"MAN","l":"Manchester, United Kingdom üá¨üáß"}','{"s":"MRS","l":"Marseille, France üá´üá∑"}','{"s":"MXP","l":"Milan, Italy üáÆüáπ"}','{"s":"DME","l":"Moscow, Russia üá∑üá∫"}','{"s":"MUC","l":"Munich, Germany üá©üá™"}','{"s":"LCA","l":"Nicosia, Cyprus üá®üáæ"}','{"s":"OSL","l":"Oslo, Norway üá≥üá¥"}','{"s":"CDG","l":"Paris, France üá´üá∑"}','{"s":"PRG","l":"Prague, Czech Republic üá®üáø"}','{"s":"KEF","l":"Reykjav√≠k, Iceland üáÆüá∏"}','{"s":"RIX","l":"Riga, Latvia üá±üáª"}','{"s":"FCO","l":"Rome, Italy üáÆüáπ"}','{"s":"LED","l":"Saint Petersburg, Russia üá∑üá∫"}','{"s":"SOF","l":"Sofia, Bulgaria üáßüá¨"}','{"s":"ARN","l":"Stockholm, Sweden üá∏üá™"}','{"s":"TLL","l":"Tallinn, Estonia üá™üá™"}','{"s":"SKG","l":"Thessaloniki, Greece üá¨üá∑"}','{"s":"VIE","l":"Vienna, Austria üá¶üáπ"}','{"s":"VNO","l":"Vilnius, Lithuania üá±üáπ"}','{"s":"WAW","l":"Warsaw, Poland üáµüá±"}','{"s":"ZAG","l":"Zagreb, Croatia üá≠üá∑"}','{"s":"ZRH","l":"Z√ºrich, Switzerland üá®üá≠"}','{"s":"ARI","l":"Arica, Chile üá®üá±"}','{"s":"ASU","l":"Asunci√≥n, Paraguay üáµüáæ"}','{"s":"BOG","l":"Bogot√°, Colombia üá®üá¥"}','{"s":"EZE","l":"Buenos Aires, Argentina üá¶üá∑"}','{"s":"CWB","l":"Curitiba, Brazil üáßüá∑"}','{"s":"FOR","l":"Fortaleza, Brazil üáßüá∑"}','{"s":"GUA","l":"Guatemala City, Guatemala üá¨üáπ"}','{"s":"LIM","l":"Lima, Peru üáµüá™"}','{"s":"MDE","l":"Medell√≠n, Colombia üá®üá¥"}','{"s":"PTY","l":"Panama City, Panama üáµüá¶"}','{"s":"POA","l":"Porto Alegre, Brazil üáßüá∑"}','{"s":"UIO","l":"Quito, Ecuador üá™üá®"}','{"s":"GIG","l":"Rio de Janeiro, Brazil üáßüá∑"}','{"s":"GRU","l":"S√£o Paulo, Brazil üáßüá∑"}','{"s":"SCL","l":"Santiago, Chile üá®üá±"}','{"s":"CUR","l":"Willemstad, Cura√ßao üá®üáº"}','{"s":"GND","l":"St. George‚Äòs, Grenada üá¨üá©"}','{"s":"AMM","l":"Amman, Jordan üáØüá¥"}','{"s":"BGW","l":"Baghdad, Iraq üáÆüá∂"}','{"s":"GYD","l":"Baku, Azerbaijan üá¶üáø"}','{"s":"BEY","l":"Beirut, Lebanon üá±üáß"}','{"s":"DOH","l":"Doha, Qatar üá∂üá¶"}','{"s":"DXB","l":"Dubai, United Arab Emirates üá¶üá™"}','{"s":"KWI","l":"Kuwait City, Kuwait üá∞üáº"}','{"s":"BAH","l":"Manama, Bahrain üáßüá≠"}','{"s":"MCT","l":"Muscat, Oman üá¥üá≤"}','{"s":"ZDM","l":"Ramallah, Palestine üáµüá∏"}','{"s":"RUH","l":"Riyadh, Saudi Arabia üá∏üá¶"}','{"s":"TLV","l":"Tel Aviv, Israel üáÆüá±"}','{"s":"IAD","l":"Ashburn, VA, United States üá∫üá∏"}','{"s":"ATL","l":"Atlanta, GA, United States üá∫üá∏"}','{"s":"BOS","l":"Boston, MA, United States üá∫üá∏"}','{"s":"BUF","l":"Buffalo, NY, United States üá∫üá∏"}','{"s":"YYC","l":"Calgary, AB, Canada üá®üá¶"}','{"s":"CLT","l":"Charlotte, NC, United States üá∫üá∏"}','{"s":"ORD","l":"Chicago, IL, United States üá∫üá∏"}','{"s":"CMH","l":"Columbus, OH, United States üá∫üá∏"}','{"s":"DFW","l":"Dallas, TX, United States üá∫üá∏"}','{"s":"DEN","l":"Denver, CO, United States üá∫üá∏"}','{"s":"DTW","l":"Detroit, MI, United States üá∫üá∏"}','{"s":"HNL","l":"Honolulu, HI, United States üá∫üá∏"}','{"s":"IAH","l":"Houston, TX, United States üá∫üá∏"}','{"s":"IND","l":"Indianapolis, IN, United States üá∫üá∏"}','{"s":"JAX","l":"Jacksonville, FL, United States üá∫üá∏"}','{"s":"MCI","l":"Kansas City, MO, United States üá∫üá∏"}','{"s":"LAS","l":"Las Vegas, NV, United States üá∫üá∏"}','{"s":"LAX","l":"Los Angeles, CA, United States üá∫üá∏"}','{"s":"MFE","l":"McAllen, TX, United States üá∫üá∏"}','{"s":"MEM","l":"Memphis, TN, United States üá∫üá∏"}','{"s":"MEX","l":"Mexico City, Mexico üá≤üáΩ"}','{"s":"MIA","l":"Miami, FL, United States üá∫üá∏"}','{"s":"MSP","l":"Minneapolis, MN, United States üá∫üá∏"}','{"s":"MGM","l":"Montgomery, AL, United States üá∫üá∏"}','{"s":"YUL","l":"Montr√©al, QC, Canada üá®üá¶"}','{"s":"BNA","l":"Nashville, TN, United States üá∫üá∏"}','{"s":"EWR","l":"Newark, NJ, United States üá∫üá∏"}','{"s":"ORF","l":"Norfolk, VA, United States üá∫üá∏"}','{"s":"OMA","l":"Omaha, NE, United States üá∫üá∏"}','{"s":"PHL","l":"Philadelphia, United States üá∫üá∏"}','{"s":"PHX","l":"Phoenix, AZ, United States üá∫üá∏"}','{"s":"PIT","l":"Pittsburgh, PA, United States üá∫üá∏"}','{"s":"PAP","l":"Port-Au-Prince, Haiti üá≠üáπ"}','{"s":"PDX","l":"Portland, OR, United States üá∫üá∏"}','{"s":"QRO","l":"Queretaro, MX, Mexico üá≤üáΩ"}','{"s":"RIC","l":"Richmond, Virginia üá∫üá∏"}','{"s":"SMF","l":"Sacramento, CA, United States üá∫üá∏"}','{"s":"SLC","l":"Salt Lake City, UT, United States üá∫üá∏"}','{"s":"SAN","l":"San Diego, CA, United States üá∫üá∏"}','{"s":"SJC","l":"San Jose, CA, United States üá∫üá∏"}','{"s":"YXE","l":"Saskatoon, SK, Canada üá®üá¶"}','{"s":"SEA","l":"Seattle, WA, United States üá∫üá∏"}','{"s":"STL","l":"St. Louis, MO, United States üá∫üá∏"}','{"s":"TPA","l":"Tampa, FL, United States üá∫üá∏"}','{"s":"YYZ","l":"Toronto, ON, Canada üá®üá¶"}','{"s":"YVR","l":"Vancouver, BC, Canada üá®üá¶"}','{"s":"TLH","l":"Tallahassee, FL, United States üá∫üá∏"}','{"s":"YWG","l":"Winnipeg, MB, Canada üá®üá¶"}','{"s":"ADL","l":"Adelaide, SA, Australia üá¶üá∫"}','{"s":"AKL","l":"Auckland, New Zealand üá≥üáø"}','{"s":"BNE","l":"Brisbane, QLD, Australia üá¶üá∫"}','{"s":"MEL","l":"Melbourne, VIC, Australia üá¶üá∫"}','{"s":"NOU","l":"Noumea, New caledonia üá≥üá®"}','{"s":"PER","l":"Perth, WA, Australia üá¶üá∫"}','{"s":"SYD","l":"Sydney, NSW, Australia üá¶üá∫"}'];
        for (let i = 0; i < areas.length; i++) {
          const as = JSON.parse(areas[i]);
          if (as.s === area) {
            console.log(
                `%c ‚òÅÔ∏è Cloudflare CDN %c You are using ${as.l}`,
                'color: white; background: #0078E7; padding:5px 0;',
                'padding:4px;border:1px solid #0078E7;'
            );
            document.getElementById("cf-cdn").innerHTML = as.l;
            break;
          }
        }
      } else {
        document.getElementById("cf-cdn").innerHTML = "ÂºÇÂ∏∏";
        console.error('Failed to get CDN area');
      }
    };
    request.onerror = function() {
      document.getElementById("cf-cdn").innerHTML = "ÂºÇÂ∏∏";
      console.error('Network error');
    };
    request.send();
};

document.addEventListener('DOMContentLoaded', () => {
    tsfWidgetGuard();
    checkCFcdn();
    bannerCookie();
    document.addEventListener('pjax:complete', () => {
        checkCFcdn();
    });
    document.addEventListener('keydown', function(event) {
        if (event.keyCode === 123 || event.code === 'F12' || event.key === 'F12') {
          event.preventDefault();
        }
    });
    const celebraMonth = 3
    const celebraDay = 9
    if (new Date().getMonth() == celebraMonth && new Date().getDate() == celebraDay) {
        tsfCelebration();
    }

});
return {
    Celebration: tsfCelebration,
    closePopup: closePopup,
    closeBanner: closeBanner,
}
})();